{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactStudy\\\\react-nodebird\\\\prerpare\\\\front\\\\components\\\\CommentForm.js\";\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        row: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.PropTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["D:/reactStudy/react-nodebird/prerpare/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useInput","PropTypes","useSelector","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","object","isRequired"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,EAAE,GAAGH,WAAW,CAAEI,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM,CAACI,WAAD,EAAcC,mBAAd,IAAqCV,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAMW,eAAe,GAAGZ,WAAW,CAAC,MAAM;AACtCa,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAsBI,WAAtB;AACH,GAFkC,EAEjC,CAACA,WAAD,CAFiC,CAAnC;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,2BACA,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEF,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,GAAG,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAfD;;AAiBAP,WAAW,CAACF,SAAZ,GAAwB;AACpBG,EAAAA,IAAI,EAAGH,SAAS,CAACa,MAAV,CAAiBC;AADJ,CAAxB;AAIA,eAAeZ,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd'\r\nimport React, { useCallback } from 'react'\r\nimport useInput from '../hooks/useInput'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nconst CommentForm = ({ post }) => {\r\n    const id = useSelector((state) => state.user.me?.id)\r\n    const [commentText, onChangeCommentText] = useInput('')\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id , commentText)\r\n    },[commentText])\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n        <Form.Item>\r\n            <Input.TextArea value={commentText} onChange={onChangeCommentText} row={4} />\r\n            <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n        </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.PropTypes = {\r\n    post : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm"]},"metadata":{},"sourceType":"module"}