{"ast":null,"code":"import { all, fork, call, take, put, delay, debounce, throttle, takeLeading, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data) //요청의 결과를 받음\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield throttle(10000, 'ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["D:/reactStudy/react-nodebird/prerpare/front/sagas/post.js"],"names":["all","fork","call","take","put","delay","debounce","throttle","takeLeading","takeEvery","takeLatest","axios","addPostAPI","data","post","addPost","action","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAwCC,KAAxC,EAAgDC,QAAhD,EAA0DC,QAA1D,EAAqEC,WAArE,EAAmFC,SAAnF,EAA+FC,UAA/F,QAAgH,oBAAhH;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,UAAT,CAAqBC,IAArB,EAA2B;AACvB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAG;AACC;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAG,kBADD;AAENJ,MAAAA,IAAI,EAAGG,MAAM,CAACH;AAFR,KAAD,CAAT;AAIH,GAPD,CAOE,OAAQK,GAAR,EAAa;AACX,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAG,kBADD;AAENJ,MAAAA,IAAI,EAAGK,GAAG,CAACC,QAAJ,CAAaN;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUO,YAAV,GAAyB;AACjB,QAAMb,QAAQ,CAAC,KAAD,EAAQ,kBAAR,EAA6BQ,OAA7B,CAAd;AACP;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMrB,GAAG,CAAE,CACPC,IAAI,CAACmB,YAAD,CADG,CAAF,CAAT;AAGH","sourcesContent":["import { all , fork, call , take, put , delay , debounce, throttle , takeLeading , takeEvery , takeLatest} from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction addPostAPI (data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try{\r\n        // const result = yield call(addPostAPI, action.data) //요청의 결과를 받음\r\n        yield delay(1000)\r\n        yield put({\r\n            type : 'ADD_POST_SUCCESS',\r\n            data : action.data\r\n        })\r\n    } catch  (err) {\r\n        yield put({\r\n            type : 'ADD_POST_FAILURE',\r\n            data : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n        yield throttle(10000 ,'ADD_POST_REQUEST' , addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all ([\r\n        fork(watchAddPost)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}