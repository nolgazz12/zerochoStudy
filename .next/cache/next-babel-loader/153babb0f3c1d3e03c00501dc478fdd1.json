{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactStudy\\\\react-nodebird\\\\prerpare\\\\front\\\\components\\\\postCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Button, Card, Image, Popover, Avatar } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./postImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; // const id = me?.id; \n  //optional chaining 연산자 위를 해석하자면 me && me.id ==> me?.id \n  //me.id 가 있으면 me.id를 넣어주고 없으면undefined를 보여주는 애\n  // const { me }  = useSelector((state) => state.user)\n  //위에 있는 두 줄의 코딩을 바꿀 수도 있다.\n\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // 이렇게 씀으로써\n  // const id = useSelector((state) => state.user.me && state.user.me.id) 로 안써도 된다.\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      CommentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 36\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"/vdGuQI1cX/RYFaYqmIk5e/spKs=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  //shape 은 onject 를 구체적으로 해주기 위해\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/reactStudy/react-nodebird/prerpare/front/components/postCard.js"],"names":["React","useCallback","useState","PropTypes","Button","Card","Image","Popover","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","PostImages","PostCard","post","state","user","me","id","liked","setLiked","CommentFormOpened","setCommentFormOpened","onToggleLike","prev","marginBottom","Images","images","User","nickname","content","propTypes","shape","number","object","string","createAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback , useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport { Button , Card, Image, Popover , Avatar } from \"antd\"\r\nimport {  RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons'\r\nimport { useSelector } from \"react-redux\"\r\nimport PostImages from \"./postImages\"\r\nconst PostCard = ({ post }) => {\r\n    const { me }  = useSelector((state) => state.user)\r\n    // const id = me?.id; \r\n    //optional chaining 연산자 위를 해석하자면 me && me.id ==> me?.id \r\n    //me.id 가 있으면 me.id를 넣어주고 없으면undefined를 보여주는 애\r\n    // const { me }  = useSelector((state) => state.user)\r\n    //위에 있는 두 줄의 코딩을 바꿀 수도 있다.\r\n\r\n    const id = useSelector((state) => state.user.me?.id)\r\n    // 이렇게 씀으로써\r\n    // const id = useSelector((state) => state.user.me && state.user.me.id) 로 안써도 된다.\r\n\r\n    const [liked, setLiked] = useState(false)\r\n    const [CommentFormOpened , setCommentFormOpened] = useState(false)\r\n\r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev)\r\n    }, [])\r\n    return (\r\n        <div style={{ marginBottom : \"20px\"}}>\r\n          <Card\r\n          cover={post.Images[0] && <PostImages images={post.images}/>}\r\n          actions={[\r\n              <RetweetOutlined twoToneColor=\"#eb2f96\" key=\"retweet\" onClick={onToggleLike}/>,\r\n              <HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n              <MessageOutlined key=\"comment\"/>,\r\n              <Popover key=\"more\" content={(\r\n                  <Button.Group>\r\n                      {id && post.User.id === id ?\r\n                       (<>\r\n                        <Button>수정</Button>\r\n                        <Button type='danger'>삭제</Button>\r\n                        </>\r\n                      ) :\r\n                        <Button>신고</Button>}\r\n                  </Button.Group>\r\n              )}>\r\n                  <EllipsisOutlined />\r\n              </Popover>\r\n          ]}\r\n          >\r\n          <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n          />\r\n          </Card>\r\n          {/* <CommentForm />\r\n          <Comments /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    //shape 은 onject 를 구체적으로 해주기 위해\r\n    post : PropTypes.shape({\r\n        id : PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard"]},"metadata":{},"sourceType":"module"}