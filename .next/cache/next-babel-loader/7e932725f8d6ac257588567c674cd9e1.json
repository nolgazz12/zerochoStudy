{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nvar initialState = {\n  user: {},\n  post: {}\n}; // 비동기\n//액션 크리에이터\n\nvar changeNickname = function changeNickname() {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n}; // 이전 상태 , 액션 ==> 다음상태\n\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/reactStudy/react-nodebird/prerpare/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","changeNickname","type","data","rootReducer","state","action","console","log","payload","isLoggedIn"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG,EADU;AAIjBC,EAAAA,IAAI,EAAG;AAJU,CAArB,C,CAWA;AACA;;AACA,IAAMC,cAAc,GAAI,SAAlBA,cAAkB,GAAM;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAAG,iBADJ;AAEHC,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALD,C,CAQA;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAClD,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKL,OAAL;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAwBF,MAAxB;AACA,6CAAYD,KAAZ,GAAsBC,MAAM,CAACG,OAA7B;;AACA,SAAK,QAAL;AACI,6CACOJ,KADP;AAEIN,QAAAA,IAAI,kCACGM,KAAK,CAACN,IADT;AAEAW,UAAAA,UAAU,EAAG,IAFb;AAGAX,UAAAA,IAAI,EAAGO,MAAM,CAACH;AAHd;AAFR;;AAQJ,SAAK,SAAL;AACI,6CACOE,KADP;AAEIN,QAAAA,IAAI,kCACGM,KAAK,CAACN,IADT;AAEAW,UAAAA,UAAU,EAAG,KAFb;AAGAX,UAAAA,IAAI,EAAG;AAHP;AAFR;;AAQJ;AACA,aAAOM,KAAP;AAvBJ;AA2BH,CA5BD;;AA8BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"\r\n\r\nconst initialState = {\r\n    user : {\r\n     \r\n    },\r\n    post : {\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\n// 비동기\r\n//액션 크리에이터\r\nconst changeNickname =  () => {\r\n    return {\r\n        type : 'CHANGE_NICKNAME',\r\n        data,\r\n    }\r\n}\r\n\r\n\r\n// 이전 상태 , 액션 ==> 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HYDRATE : \r\n        console.log('HYDRATE' , action);\r\n        return { ...state, ...action.payload}\r\n        case 'LOG_IN' :\r\n            return {\r\n                ...state,\r\n                user : {\r\n                    ...state.user,\r\n                    isLoggedIn : true,\r\n                    user : action.data,\r\n                }\r\n            }\r\n        case 'LOG_OUT' :\r\n            return {\r\n                ...state,\r\n                user : {\r\n                    ...state.user,\r\n                    isLoggedIn : false,\r\n                    user : null,\r\n                }\r\n            }\r\n        default :\r\n        return state; \r\n\r\n    }\r\n\r\n}\r\n\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}