{"ast":null,"code":"import { all, fork, call, take, put } from 'redux-saga/effects';\n\nfunction logInAPI() {\n  return axios.post('/api/login');\n}\n\nfunction* logIn() {\n  const result = yield call(logInAPI); //요청의 결과를 받음\n\n  yield put({\n    type: 'LOG_IN_SUCCESS',\n    data: result.data\n  });\n}\n\nfunction* watchLogIn() {\n  yield take('LOG_IN', logIn); //로그인이라는 액션이 실행될 때까지 기다리겠다. ==> take \n}\n\nfunction* watchLogOut() {\n  yield take('LOG_OUT');\n}\n\nfunction* watchAddPost() {\n  yield take('ADD_POST');\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["D:/reactStudy/react-nodebird/prerpare/front/sagas/index.js"],"names":["all","fork","call","take","put","logInAPI","axios","post","logIn","result","type","data","watchLogIn","watchLogOut","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA4BC,IAA5B,EAAkCC,GAAlC,QAA6C,oBAA7C;;AAEA,SAASC,QAAT,GAAqB;AACjB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACH;;AAED,UAAUC,KAAV,GAAkB;AAEd,QAAMC,MAAM,GAAG,MAAMP,IAAI,CAACG,QAAD,CAAzB,CAFc,CAEsB;;AACpC,QAAMD,GAAG,CAAC;AACNM,IAAAA,IAAI,EAAG,gBADD;AAENC,IAAAA,IAAI,EAAGF,MAAM,CAACE;AAFR,GAAD,CAAT;AAIH;;AAED,UAAUC,UAAV,GAAuB;AACnB,QAAMT,IAAI,CAAC,QAAD,EAAYK,KAAZ,CAAV,CADmB,CACU;AAChC;;AAED,UAAUK,WAAV,GAAwB;AACpB,QAAMV,IAAI,CAAC,SAAD,CAAV;AACH;;AAED,UAAUW,YAAV,GAAyB;AACrB,QAAMX,IAAI,CAAC,UAAD,CAAV;AACH;;AAMD,eAAe,UAAUY,QAAV,GAAqB;AAEhC,QAAMf,GAAG,CAAC,CACNC,IAAI,CAACW,UAAD,CADE,EAENX,IAAI,CAACY,WAAD,CAFE,EAGNZ,IAAI,CAACa,YAAD,CAHE,CAAD,CAAT;AAMH","sourcesContent":["import { all , fork, call , take, put } from 'redux-saga/effects'\r\n\r\nfunction logInAPI () {\r\n    return axios.post('/api/login')\r\n}\r\n\r\nfunction* logIn() {\r\n \r\n    const result = yield call(logInAPI) //요청의 결과를 받음\r\n    yield put({\r\n        type : 'LOG_IN_SUCCESS',\r\n        data : result.data\r\n    })\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield take('LOG_IN' , logIn) //로그인이라는 액션이 실행될 때까지 기다리겠다. ==> take \r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield take('LOG_OUT');\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield take('ADD_POST');\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchAddPost)\r\n    ])\r\n\r\n}"]},"metadata":{},"sourceType":"module"}